Problem Statement : You are given an array of integers nums. Return the length of the longest subarray of nums which is either strictly increasing or strictly decreasing. 
                    Example, Input : [1,4,3,3,2]
                             Output: 2
Coding Platform used : Leet Code

Approach : Use two counters: incLen for increasing sequences and decLen for decreasing sequences.
           Traverse the array and compare each element with the previous one.
           Update the counters accordingly.
           Keep track of the maximum length found.

class Solution {
    public int longestMonotonicSubarray(int[] nums) {
        if (nums.length == 1) return 1;

        int maxLen = 1;
        int incLen = 1, decLen = 1;

        for (int i = 1; i < nums.length; i++) {
            if (nums[i] > nums[i - 1]) {  
                incLen++;
                decLen = 1; 
            } else if (nums[i] < nums[i - 1]) {  
                decLen++;
                incLen = 1; 
            } else {  
                incLen = decLen = 1;
            }
            maxLen = Math.max(maxLen, Math.max(incLen, decLen));
        }
        return maxLen;
    }
}
